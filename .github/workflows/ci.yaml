# name: templatte CI

# on: [push, pull_request]

# jobs:
#   build:
#     runs-on: ${{ matrix.os }}

#     strategy:
#       matrix:
#         # os: [ubuntu-latest, macos-latest, windows-latest]
#         os: [windows-latest]
#         python-version: ["3.10", "3.11", "3.12"]
#     env:
#       OS: ${{ matrix.os }}

#     steps:
#       - name: Set OS Environment Variables (Windows)
#         if: runner.os == 'Windows'
#         run: |
#           echo 'ACTIVATE_PYTHON_VENV=.venv/scripts/activate' >> $GITHUB_ENV

#       - name: Check out repository
#         uses: actions/checkout@v4

#       - name: Set up python ${{ matrix.python-version }}
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install Poetry
#         uses: snok/install-poetry@v1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#           installer-parallel: false

#       # - name: Add Poetry to PATH (Windows)
#       #   if: runner.os == 'Windows'
#       #   run: |
#       #     echo "C:\Users\runneradmin\.local\bin" >> $GITHUB_PATH

#       # - name: Set PATH environment variable
#       #   if: runner.os == 'Windows'
#       #   run: |
#       #     echo "%APPDATA%\Python\Scripts" >> $GITHUB_ENV

#       - name: Build
#         run: |
#           poetry --version

name: tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    # env:
    #   OS: ${{ matrix.os }}
    #   PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache $HOME/.local # Significantly speeds up Poetry Install
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{matrix.python-version}}-${{ hashFiles('.github/workflows/tests.yaml') }}

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: false

      - name: Install library
        run: poetry install
